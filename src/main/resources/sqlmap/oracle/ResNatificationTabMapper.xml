<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.hw.mapper.ResNatificationTabMapper">

	<resultMap id="ResNatificationTab" type="com.hw.domain.po.ResNatificationTab">
        <result property="id" column="ID"/>
        <result property="fromUserid" column="FROM_USERID"/>
        <result property="createTime" column="CREATE_TIME"/>
        <result property="toUserid" column="TO_USERID"/>
        <result property="checkUserid" column="CHECK_USERID"/>
        <result property="description" column="DESCRIPTION"/>
        <result property="startTime" column="START_TIME"/>
        <result property="endTime" column="END_TIME"/>
        <result property="isDelete" column="IS_DELETE"/>
        <result property="fromUsername" column="FROM_USERNAME"/>
        <result property="toUsername" column="TO_USERNAME"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		ID,FROM_USERID,CREATE_TIME,TO_USERID,CHECK_USERID,DESCRIPTION,START_TIME,END_TIME,IS_DELETE,FROM_USERNAME,TO_USERNAME
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and oracle -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO RES_NATIFICATION_TAB (
        	ID ,
        	FROM_USERID ,
        	CREATE_TIME ,
        	TO_USERID ,
        	CHECK_USERID ,
        	DESCRIPTION ,
        	START_TIME ,
        	END_TIME ,
        	IS_DELETE ,
        	FROM_USERNAME ,
        	TO_USERNAME 
        ) VALUES (
        	#{id} ,
        	#{fromUserid} ,
        	#{createTime} ,
        	#{toUserid} ,
        	#{checkUserid} ,
        	#{description} ,
        	#{startTime} ,
        	#{endTime} ,
        	#{isDelete} ,
        	#{fromUsername} ,
        	#{toUsername} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update" >
    <![CDATA[
        UPDATE RES_NATIFICATION_TAB SET
	        FROM_USERID = #{fromUserid} ,
	        CREATE_TIME = #{createTime} ,
	        TO_USERID = #{toUserid} ,
	        CHECK_USERID = #{checkUserid} ,
	        DESCRIPTION = #{description} ,
	        START_TIME = #{startTime} ,
	        END_TIME = #{endTime} ,
	        IS_DELETE = #{isDelete} ,
	        FROM_USERNAME = #{fromUsername} ,
	        TO_USERNAME = #{toUsername} 
        WHERE 
	        ID = #{id} 
    ]]>
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM RES_NATIFICATION_TAB WHERE
        ID = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="ResNatificationTab">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM RES_NATIFICATION_TAB 
	        WHERE 
		        ID = #{id} 
	    ]]>
	</select>
	
	<sql id="findPage_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(id)">
				AND ID = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(fromUserid)">
				AND FROM_USERID = #{fromUserid}
			</if>
	       <if test="@Ognl@isNotEmpty(createTimeBegin)">
				AND CREATE_TIME >= #{createTimeBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(createTimeEnd)">
				AND CREATE_TIME &lt;= #{createTimeEnd}
		   </if>
	       <if test="@Ognl@isNotEmpty(toUserid)">
				AND TO_USERID = #{toUserid}
			</if>
	       <if test="@Ognl@isNotEmpty(checkUserid)">
				AND CHECK_USERID = #{checkUserid}
			</if>
	       <if test="@Ognl@isNotEmpty(description)">
				AND DESCRIPTION = #{description}
			</if>
	       <if test="@Ognl@isNotEmpty(startTimeBegin)">
				AND START_TIME >= #{startTimeBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(startTimeEnd)">
				AND START_TIME &lt;= #{startTimeEnd}
		   </if>
	       <if test="@Ognl@isNotEmpty(endTimeBegin)">
				AND END_TIME >= #{endTimeBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(endTimeEnd)">
				AND END_TIME &lt;= #{endTimeEnd}
		   </if>
	       <if test="@Ognl@isNotEmpty(isDelete)">
				AND IS_DELETE = #{isDelete}
			</if>
	       <if test="@Ognl@isNotEmpty(fromUsername)">
				AND FROM_USERNAME = #{fromUsername}
			</if>
	       <if test="@Ognl@isNotEmpty(toUsername)">
				AND TO_USERNAME = #{toUsername}
			</if>
		</where>
	</sql>
		
    <select id="findPage_count" resultType="long">
        SELECT count(*) FROM RES_NATIFICATION_TAB 
		<include refid="findPage_where"/>
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="ResNatificationTab">
    	SELECT <include refid="columns" />
	    FROM RES_NATIFICATION_TAB 
		<include refid="findPage_where"/>
		

    </select>

	
</mapper>

