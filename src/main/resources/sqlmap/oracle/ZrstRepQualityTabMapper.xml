<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.hw.mapper.ZrstRepQualityTabMapper">

	<resultMap id="ZrstRepQualityTab" type="com.hw.domain.po.ZrstRepQualityTab">
        <result property="dataId" column="DATA_ID"/>
        <result property="reportId" column="REPORT_ID"/>
        <result property="frequency" column="FREQUENCY"/>
        <result property="playTime" column="PLAY_TIME"/>
        <result property="language" column="LANGUAGE"/>
        <result property="stationName" column="STATION_NAME"/>
        <result property="headName" column="HEAD_NAME"/>
        <result property="dataTime" column="DATA_TIME"/>
        <result property="dataLevel" column="DATA_LEVEL"/>
        <result property="dataFmoram" column="DATA_FMORAM"/>
        <result property="dataOffset" column="DATA_OFFSET"/>
        <result property="remark" column="REMARK"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		DATA_ID,REPORT_ID,FREQUENCY,PLAY_TIME,LANGUAGE,STATION_NAME,HEAD_NAME,DATA_TIME,DATA_LEVEL,DATA_FMORAM,DATA_OFFSET,REMARK
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and oracle -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="dataId">
    <![CDATA[
        INSERT INTO ZRST_REP_QUALITY_TAB (
        	DATA_ID ,
        	REPORT_ID ,
        	FREQUENCY ,
        	PLAY_TIME ,
        	LANGUAGE ,
        	STATION_NAME ,
        	HEAD_NAME ,
        	DATA_TIME ,
        	DATA_LEVEL ,
        	DATA_FMORAM ,
        	DATA_OFFSET ,
        	REMARK 
        ) VALUES (
        	#{dataId} ,
        	#{reportId} ,
        	#{frequency} ,
        	#{playTime} ,
        	#{language} ,
        	#{stationName} ,
        	#{headName} ,
        	#{dataTime} ,
        	#{dataLevel} ,
        	#{dataFmoram} ,
        	#{dataOffset} ,
        	#{remark} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update" >
    <![CDATA[
        UPDATE ZRST_REP_QUALITY_TAB SET
	        REPORT_ID = #{reportId} ,
	        FREQUENCY = #{frequency} ,
	        PLAY_TIME = #{playTime} ,
	        LANGUAGE = #{language} ,
	        STATION_NAME = #{stationName} ,
	        HEAD_NAME = #{headName} ,
	        DATA_TIME = #{dataTime} ,
	        DATA_LEVEL = #{dataLevel} ,
	        DATA_FMORAM = #{dataFmoram} ,
	        DATA_OFFSET = #{dataOffset} ,
	        REMARK = #{remark} 
        WHERE 
	        DATA_ID = #{dataId} 
    ]]>
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM ZRST_REP_QUALITY_TAB WHERE
        DATA_ID = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="ZrstRepQualityTab">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM ZRST_REP_QUALITY_TAB 
	        WHERE 
		        DATA_ID = #{id} 
	    ]]>
	</select>
	
	<sql id="findPage_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(dataId)">
				AND DATA_ID = #{dataId}
			</if>
	       <if test="@Ognl@isNotEmpty(reportId)">
				AND REPORT_ID = #{reportId}
			</if>
	       <if test="@Ognl@isNotEmpty(frequency)">
				AND FREQUENCY = #{frequency}
			</if>
	       <if test="@Ognl@isNotEmpty(playTime)">
				AND PLAY_TIME = #{playTime}
			</if>
	       <if test="@Ognl@isNotEmpty(language)">
				AND LANGUAGE = #{language}
			</if>
	       <if test="@Ognl@isNotEmpty(stationName)">
				AND STATION_NAME = #{stationName}
			</if>
	       <if test="@Ognl@isNotEmpty(headName)">
				AND HEAD_NAME = #{headName}
			</if>
	       <if test="@Ognl@isNotEmpty(dataTimeBegin)">
				AND DATA_TIME >= #{dataTimeBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(dataTimeEnd)">
				AND DATA_TIME &lt;= #{dataTimeEnd}
		   </if>
	       <if test="@Ognl@isNotEmpty(dataLevel)">
				AND DATA_LEVEL = #{dataLevel}
			</if>
	       <if test="@Ognl@isNotEmpty(dataFmoram)">
				AND DATA_FMORAM = #{dataFmoram}
			</if>
	       <if test="@Ognl@isNotEmpty(dataOffset)">
				AND DATA_OFFSET = #{dataOffset}
			</if>
	       <if test="@Ognl@isNotEmpty(remark)">
				AND REMARK = #{remark}
			</if>
		</where>
	</sql>
		
    <select id="findPage_count" resultType="long">
        SELECT count(*) FROM ZRST_REP_QUALITY_TAB 
		<include refid="findPage_where"/>
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="ZrstRepQualityTab">
    	SELECT <include refid="columns" />
	    FROM ZRST_REP_QUALITY_TAB 
		<include refid="findPage_where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
</mapper>

