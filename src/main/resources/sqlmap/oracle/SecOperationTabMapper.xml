<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.hw.mapper.SecOperationTabMapper">

	<resultMap id="SecOperationTab" type="com.hw.domain.po.SecOperationTab">
        <result property="operationId" column="OPERATION_ID"/>
        <result property="operationName" column="OPERATION_NAME"/>
        <result property="operationDescription" column="OPERATION_DESCRIPTION"/>
        <result property="type" column="TYPE"/>
        <result property="parentOperationId" column="PARENT_OPERATION_ID"/>
        <result property="description" column="DESCRIPTION"/>
        <result property="broadcastType" column="BROADCAST_TYPE"/>
        <result property="showFlag" column="SHOW_FLAG"/>
        <result property="showName" column="SHOW_NAME"/>
        <result property="classPath" column="CLASS_PATH"/>
        <result property="iconSource" column="ICON_SOURCE"/>
        <result property="fastIconSource" column="FAST_ICON_SOURCE"/>
        <result property="funcType" column="FUNC_TYPE"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		op.OPERATION_ID,op.OPERATION_NAME,op.OPERATION_DESCRIPTION,op.TYPE,op.PARENT_OPERATION_ID,op.DESCRIPTION,op.BROADCAST_TYPE,op.SHOW_FLAG,op.SHOW_NAME,op.CLASS_PATH,op.ICON_SOURCE,op.FAST_ICON_SOURCE,op.FUNC_TYPE
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and oracle -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="operationId">
    <![CDATA[
        INSERT INTO SEC_OPERATION_TAB op (
        	OPERATION_ID ,
        	OPERATION_NAME ,
        	OPERATION_DESCRIPTION ,
        	TYPE ,
        	PARENT_OPERATION_ID ,
        	DESCRIPTION ,
        	BROADCAST_TYPE ,
        	SHOW_FLAG ,
        	SHOW_NAME ,
        	CLASS_PATH ,
        	ICON_SOURCE ,
        	FAST_ICON_SOURCE ,
        	FUNC_TYPE 
        ) VALUES (
        	#{operationId} ,
        	#{operationName} ,
        	#{operationDescription} ,
        	#{type} ,
        	#{parentOperationId} ,
        	#{description} ,
        	#{broadcastType} ,
        	#{showFlag} ,
        	#{showName} ,
        	#{classPath} ,
        	#{iconSource} ,
        	#{fastIconSource} ,
        	#{funcType} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update" >
    <![CDATA[
        UPDATE SEC_OPERATION_TAB op SET
	        OPERATION_NAME = #{operationName} ,
	        OPERATION_DESCRIPTION = #{operationDescription} ,
	        TYPE = #{type} ,
	        PARENT_OPERATION_ID = #{parentOperationId} ,
	        DESCRIPTION = #{description} ,
	        BROADCAST_TYPE = #{broadcastType} ,
	        SHOW_FLAG = #{showFlag} ,
	        SHOW_NAME = #{showName} ,
	        CLASS_PATH = #{classPath} ,
	        ICON_SOURCE = #{iconSource} ,
	        FAST_ICON_SOURCE = #{fastIconSource} ,
	        FUNC_TYPE = #{funcType} 
        WHERE 
	        OPERATION_ID = #{operationId} 
    ]]>
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM SEC_OPERATION_TAB op WHERE
        OPERATION_ID = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="SecOperationTab">
		SELECT <include refid="columns" />

		    FROM SEC_OPERATION_TAB op 
	        WHERE
				 OPERATION_ID = #{id}

	</select>
    <select id="getAllOperationByBroadcastType" resultMap="SecOperationTab">
        SELECT <include refid="columns" />
        FROM SEC_OPERATION_TAB op
        WHERE
           op.show_flag = 1
          and op.broadcast_type =  #{broadcastType}

    </select>
    <select id="getChildrenByQueryParamter" resultMap="SecOperationTab">
        SELECT <include refid="columns" />

		    FROM SEC_OPERATION_TAB  op,sec_role_operation_rel_tab rf
	        WHERE
         op.OPERATION_ID = rf.OPERATION_ID
         and op.show_flag = 1
        <if test="@Ognl@isNotEmpty(broadcastType)">
            and op.broadcast_type =  #{broadcastType}
        </if>
        <if test="@Ognl@isNotEmpty(roleIdList)">
            and rf.role_id in
            <foreach collection="roleIdList" item="roleId" open="(" separator="," close=")">
                 #{roleId}
            </foreach>
        </if>
		<if test="@Ognl@isNotEmpty(operationId)">
			and op.OPERATION_ID = #{operationId}
	    </if>

    </select>
	
	<sql id="findPage_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(operationId)">
				AND OPERATION_ID = #{operationId}
			</if>
	       <if test="@Ognl@isNotEmpty(operationName)">
				AND OPERATION_NAME = #{operationName}
			</if>
	       <if test="@Ognl@isNotEmpty(operationDescription)">
				AND OPERATION_DESCRIPTION = #{operationDescription}
			</if>
	       <if test="@Ognl@isNotEmpty(type)">
				AND TYPE = #{type}
			</if>
	       <if test="@Ognl@isNotEmpty(parentOperationId)">
				AND PARENT_OPERATION_ID = #{parentOperationId}
			</if>
	       <if test="@Ognl@isNotEmpty(description)">
				AND DESCRIPTION = #{description}
			</if>
	       <if test="@Ognl@isNotEmpty(broadcastType)">
				AND BROADCAST_TYPE = #{broadcastType}
			</if>
	       <if test="@Ognl@isNotEmpty(showFlag)">
				AND SHOW_FLAG = #{showFlag}
			</if>
	       <if test="@Ognl@isNotEmpty(showName)">
				AND SHOW_NAME = #{showName}
			</if>
	       <if test="@Ognl@isNotEmpty(classPath)">
				AND CLASS_PATH = #{classPath}
			</if>
	       <if test="@Ognl@isNotEmpty(iconSource)">
				AND ICON_SOURCE = #{iconSource}
			</if>
	       <if test="@Ognl@isNotEmpty(fastIconSource)">
				AND FAST_ICON_SOURCE = #{fastIconSource}
			</if>
	       <if test="@Ognl@isNotEmpty(funcType)">
				AND FUNC_TYPE = #{funcType}
			</if>
		</where>
	</sql>
		
    <select id="findPage_count" resultType="long">
        SELECT count(*) FROM SEC_OPERATION_TAB op 
		<include refid="findPage_where"/>
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="SecOperationTab">
    	SELECT <include refid="columns" />
	    FROM SEC_OPERATION_TAB op 
		<include refid="findPage_where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
</mapper>

