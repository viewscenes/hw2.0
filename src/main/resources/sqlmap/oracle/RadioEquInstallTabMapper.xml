<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.hw.mapper.RadioEquInstallTabMapper">

	<resultMap id="RadioEquInstallTab" type="com.hw.domain.po.RadioEquInstallTab">
        <result property="id" column="ID"/>
        <result property="headId" column="HEAD_ID"/>
        <result property="headName" column="HEAD_NAME"/>
        <result property="headCode" column="HEAD_CODE"/>
        <result property="equName" column="EQU_NAME"/>
        <result property="equId" column="EQU_ID"/>
        <result property="status" column="STATUS"/>
        <result property="mailTime" column="MAIL_TIME"/>
        <result property="orderNo" column="ORDER_NO"/>
        <result property="savePlace" column="SAVE_PLACE"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		ID,HEAD_ID,HEAD_NAME,HEAD_CODE,EQU_NAME,EQU_ID,STATUS,MAIL_TIME,ORDER_NO,SAVE_PLACE
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and oracle -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
    <![CDATA[
        INSERT INTO RADIO_EQU_INSTALL_TAB (
        	ID ,
        	HEAD_ID ,
        	HEAD_NAME ,
        	HEAD_CODE ,
        	EQU_NAME ,
        	EQU_ID ,
        	STATUS ,
        	MAIL_TIME ,
        	ORDER_NO ,
        	SAVE_PLACE 
        ) VALUES (
        	#{id} ,
        	#{headId} ,
        	#{headName} ,
        	#{headCode} ,
        	#{equName} ,
        	#{equId} ,
        	#{status} ,
        	#{mailTime} ,
        	#{orderNo} ,
        	#{savePlace} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update" >
    <![CDATA[
        UPDATE RADIO_EQU_INSTALL_TAB SET
	        HEAD_ID = #{headId} ,
	        HEAD_NAME = #{headName} ,
	        HEAD_CODE = #{headCode} ,
	        EQU_NAME = #{equName} ,
	        EQU_ID = #{equId} ,
	        STATUS = #{status} ,
	        MAIL_TIME = #{mailTime} ,
	        ORDER_NO = #{orderNo} ,
	        SAVE_PLACE = #{savePlace} 
        WHERE 
	        ID = #{id} 
    ]]>
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM RADIO_EQU_INSTALL_TAB WHERE
        ID = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="RadioEquInstallTab">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM RADIO_EQU_INSTALL_TAB 
	        WHERE 
		        ID = #{id} 
	    ]]>
	</select>
	
	<sql id="findPage_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(id)">
				AND ID = #{id}
			</if>
	       <if test="@Ognl@isNotEmpty(headId)">
				AND HEAD_ID = #{headId}
			</if>
	       <if test="@Ognl@isNotEmpty(headName)">
				AND HEAD_NAME = #{headName}
			</if>
	       <if test="@Ognl@isNotEmpty(headCode)">
				AND HEAD_CODE = #{headCode}
			</if>
	       <if test="@Ognl@isNotEmpty(equName)">
				AND EQU_NAME = #{equName}
			</if>
	       <if test="@Ognl@isNotEmpty(equId)">
				AND EQU_ID = #{equId}
			</if>
	       <if test="@Ognl@isNotEmpty(status)">
				AND STATUS = #{status}
			</if>
	       <if test="@Ognl@isNotEmpty(mailTimeBegin)">
				AND MAIL_TIME >= #{mailTimeBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(mailTimeEnd)">
				AND MAIL_TIME &lt;= #{mailTimeEnd}
		   </if>
	       <if test="@Ognl@isNotEmpty(orderNo)">
				AND ORDER_NO = #{orderNo}
			</if>
	       <if test="@Ognl@isNotEmpty(savePlace)">
				AND SAVE_PLACE = #{savePlace}
			</if>
		</where>
	</sql>
		
    <select id="findPage_count" resultType="long">
        SELECT count(*) FROM RADIO_EQU_INSTALL_TAB 
		<include refid="findPage_where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="RadioEquInstallTab">
    	SELECT <include refid="columns" />
	    FROM RADIO_EQU_INSTALL_TAB 
		<include refid="findPage_where"/>
		

    </select>

	
</mapper>

