<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
		"http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.hw.mapper.SecUserTabMaper">

	<resultMap id="SecUserTab" type="com.hw.domain.po.SecUserTab">
        <result property="userId" column="USER_ID"/>
        <result property="userCode" column="USER_CODE"/>
        <result property="userName" column="USER_NAME"/>
        <result property="userPassword" column="USER_PASSWORD"/>
        <result property="age" column="AGE"/>
        <result property="sex" column="SEX"/>
        <result property="mobilephone" column="MOBILEPHONE"/>
        <result property="telephone" column="TELEPHONE"/>
        <result property="address" column="ADDRESS"/>
        <result property="post" column="POST"/>
        <result property="description" column="DESCRIPTION"/>
        <result property="email" column="EMAIL"/>
        <result property="priority" column="PRIORITY"/>
        <result property="isDelete" column="IS_DELETE"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		USER_ID,USER_CODE,USER_NAME,USER_PASSWORD,AGE,SEX,MOBILEPHONE,
		TELEPHONE,ADDRESS,POST,DESCRIPTION,EMAIL,PRIORITY,IS_DELETE
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and oracle -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="userId">
    <![CDATA[
        INSERT INTO SEC_USER_TAB (
        	USER_ID ,
        	USER_CODE ,
        	USER_NAME ,
        	USER_PASSWORD ,
        	AGE ,
        	SEX ,
        	MOBILEPHONE ,
        	TELEPHONE ,
        	ADDRESS ,
        	POST ,
        	DESCRIPTION ,
        	EMAIL ,
        	PRIORITY ,
        	IS_DELETE 
        ) VALUES (
        	#{userId} ,
        	#{userCode} ,
        	#{userName} ,
        	#{userPassword} ,
        	#{age} ,
        	#{sex} ,
        	#{mobilephone} ,
        	#{telephone} ,
        	#{address} ,
        	#{post} ,
        	#{description} ,
        	#{email} ,
        	#{priority} ,
        	#{isDelete} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update" >
    <![CDATA[
        UPDATE SEC_USER_TAB SET
	        USER_CODE = #{userCode} ,
	        USER_NAME = #{userName} ,
	        USER_PASSWORD = #{userPassword} ,
	        AGE = #{age} ,
	        SEX = #{sex} ,
	        MOBILEPHONE = #{mobilephone} ,
	        TELEPHONE = #{telephone} ,
	        ADDRESS = #{address} ,
	        POST = #{post} ,
	        DESCRIPTION = #{description} ,
	        EMAIL = #{email} ,
	        PRIORITY = #{priority} ,
	        IS_DELETE = #{isDelete} 
        WHERE 
	        USER_ID = #{userId} 
    ]]>
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM SEC_USER_TAB WHERE
        USER_ID = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="SecUserTab">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM SEC_USER_TAB 
	        WHERE 
		        USER_ID = #{id} 
	    ]]>
	</select>
	
	<sql id="where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      is_delete =0
	       <if test="@Ognl@isNotEmpty(userId)">
				AND USER_ID = #{userId}
			</if>
	       <if test="@Ognl@isNotEmpty(userCode)">
				AND USER_CODE = #{userCode}
			</if>
	       <if test="@Ognl@isNotEmpty(userName)">
				AND USER_NAME = #{userName}
			</if>
	       <if test="@Ognl@isNotEmpty(userPassword)">
				AND USER_PASSWORD = #{userPassword}
			</if>
	       <if test="@Ognl@isNotEmpty(age)">
				AND AGE = #{age}
			</if>
	       <if test="@Ognl@isNotEmpty(sex)">
				AND SEX = #{sex}
			</if>
	       <if test="@Ognl@isNotEmpty(mobilephone)">
				AND MOBILEPHONE = #{mobilephone}
			</if>
	       <if test="@Ognl@isNotEmpty(telephone)">
				AND TELEPHONE = #{telephone}
			</if>
	       <if test="@Ognl@isNotEmpty(address)">
				AND ADDRESS = #{address}
			</if>
	       <if test="@Ognl@isNotEmpty(post)">
				AND POST = #{post}
			</if>
	       <if test="@Ognl@isNotEmpty(description)">
				AND DESCRIPTION = #{description}
			</if>
	       <if test="@Ognl@isNotEmpty(email)">
				AND EMAIL = #{email}
			</if>
	       <if test="@Ognl@isNotEmpty(priority)">
				AND PRIORITY = #{priority}
			</if>
	       <if test="@Ognl@isNotEmpty(isDelete)">
				AND IS_DELETE = #{isDelete}
			</if>
		</where>
	</sql>
		
    <select id="findPage_count" resultType="long">
        SELECT count(*) FROM SEC_USER_TAB 
		<include refid="where"/>
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="SecUserTab">
    	SELECT <include refid="columns" />
	    FROM SEC_USER_TAB 
		<include refid="where"/>
		

    </select>


	<select id="selectOneUser" resultMap="SecUserTab">
		SELECT USER_ID,USER_CODE,USER_NAME
		FROM SEC_USER_TAB
		<include refid="where"/>

	</select>
</mapper>

