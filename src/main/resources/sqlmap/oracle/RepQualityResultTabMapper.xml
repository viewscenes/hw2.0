<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.hw.mapper.RepQualityResultTabMapper">

	<resultMap id="RepQualityResultTab" type="com.hw.domain.po.RepQualityResultTab">
        <result property="resultId" column="RESULT_ID"/>
        <result property="reportDate" column="REPORT_DATE"/>
        <result property="frequency" column="FREQUENCY"/>
        <result property="startTime" column="START_TIME"/>
        <result property="endTime" column="END_TIME"/>
        <result property="language" column="LANGUAGE"/>
        <result property="station" column="STATION"/>
        <result property="headNames" column="HEAD_NAMES"/>
        <result property="levelValue" column="LEVEL_VALUE"/>
        <result property="qualityValue" column="QUALITY_VALUE"/>
        <result property="offsetValue" column="OFFSET_VALUE"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		RESULT_ID,REPORT_DATE,FREQUENCY,START_TIME,END_TIME,LANGUAGE,STATION,HEAD_NAMES,LEVEL_VALUE,QUALITY_VALUE,OFFSET_VALUE
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and oracle -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="resultId">
    <![CDATA[
        INSERT INTO REP_QUALITY_RESULT_TAB (
        	RESULT_ID ,
        	REPORT_DATE ,
        	FREQUENCY ,
        	START_TIME ,
        	END_TIME ,
        	LANGUAGE ,
        	STATION ,
        	HEAD_NAMES ,
        	LEVEL_VALUE ,
        	QUALITY_VALUE ,
        	OFFSET_VALUE 
        ) VALUES (
        	#{resultId} ,
        	#{reportDate} ,
        	#{frequency} ,
        	#{startTime} ,
        	#{endTime} ,
        	#{language} ,
        	#{station} ,
        	#{headNames} ,
        	#{levelValue} ,
        	#{qualityValue} ,
        	#{offsetValue} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update" >
    <![CDATA[
        UPDATE REP_QUALITY_RESULT_TAB SET
	        REPORT_DATE = #{reportDate} ,
	        FREQUENCY = #{frequency} ,
	        START_TIME = #{startTime} ,
	        END_TIME = #{endTime} ,
	        LANGUAGE = #{language} ,
	        STATION = #{station} ,
	        HEAD_NAMES = #{headNames} ,
	        LEVEL_VALUE = #{levelValue} ,
	        QUALITY_VALUE = #{qualityValue} ,
	        OFFSET_VALUE = #{offsetValue} 
        WHERE 
	        RESULT_ID = #{resultId} 
    ]]>
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM REP_QUALITY_RESULT_TAB WHERE
        RESULT_ID = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="RepQualityResultTab">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM REP_QUALITY_RESULT_TAB 
	        WHERE 
		        RESULT_ID = #{id} 
	    ]]>
	</select>
	
	<sql id="findPage_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(resultId)">
				AND RESULT_ID = #{resultId}
			</if>
	       <if test="@Ognl@isNotEmpty(reportDateBegin)">
				AND REPORT_DATE >= #{reportDateBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(reportDateEnd)">
				AND REPORT_DATE &lt;= #{reportDateEnd}
		   </if>
	       <if test="@Ognl@isNotEmpty(frequency)">
				AND FREQUENCY = #{frequency}
			</if>
	       <if test="@Ognl@isNotEmpty(startTimeBegin)">
				AND START_TIME >= #{startTimeBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(startTimeEnd)">
				AND START_TIME &lt;= #{startTimeEnd}
		   </if>
	       <if test="@Ognl@isNotEmpty(endTimeBegin)">
				AND END_TIME >= #{endTimeBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(endTimeEnd)">
				AND END_TIME &lt;= #{endTimeEnd}
		   </if>
	       <if test="@Ognl@isNotEmpty(language)">
				AND LANGUAGE = #{language}
			</if>
	       <if test="@Ognl@isNotEmpty(station)">
				AND STATION = #{station}
			</if>
	       <if test="@Ognl@isNotEmpty(headNames)">
				AND HEAD_NAMES = #{headNames}
			</if>
	       <if test="@Ognl@isNotEmpty(levelValue)">
				AND LEVEL_VALUE = #{levelValue}
			</if>
	       <if test="@Ognl@isNotEmpty(qualityValue)">
				AND QUALITY_VALUE = #{qualityValue}
			</if>
	       <if test="@Ognl@isNotEmpty(offsetValue)">
				AND OFFSET_VALUE = #{offsetValue}
			</if>
		</where>
	</sql>
		
    <select id="findPage_count" resultType="long">
        SELECT count(*) FROM REP_QUALITY_RESULT_TAB 
		<include refid="findPage_where"/>
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="RepQualityResultTab">
    	SELECT <include refid="columns" />
	    FROM REP_QUALITY_RESULT_TAB 
		<include refid="findPage_where"/>
		

    </select>

	
</mapper>

