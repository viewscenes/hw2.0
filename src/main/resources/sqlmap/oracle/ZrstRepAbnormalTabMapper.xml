<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.hw.mapper.ZrstRepAbnormalTabMapper">

	<resultMap id="ZrstRepAbnormalTab" type="com.hw.domain.po.ZrstRepAbnormalTab">
        <result property="dataId" column="DATA_ID"/>
        <result property="reportId" column="REPORT_ID"/>
        <result property="sendCounty" column="SEND_COUNTY"/>
        <result property="sendCity" column="SEND_CITY"/>
        <result property="broadcastingOrganizations" column="BROADCASTING_ORGANIZATIONS"/>
        <result property="remoteStation" column="REMOTE_STATION"/>
        <result property="collectionPoint" column="COLLECTION_POINT"/>
        <result property="frequency" column="FREQUENCY"/>
        <result property="language" column="LANGUAGE"/>
        <result property="stationName" column="STATION_NAME"/>
        <result property="tranNo" column="TRAN_NO"/>
        <result property="power" column="POWER"/>
        <result property="getType" column="GET_TYPE"/>
        <result property="abnormalType" column="ABNORMAL_TYPE"/>
        <result property="abnormalDate" column="ABNORMAL_DATE"/>
        <result property="abnormalTime" column="ABNORMAL_TIME"/>
        <result property="type" column="TYPE"/>
        <result property="remark" column="REMARK"/>
        <result property="playTime" column="PLAY_TIME"/>
        <result property="countMinues" column="COUNT_MINUES"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		DATA_ID,REPORT_ID,SEND_COUNTY,SEND_CITY,BROADCASTING_ORGANIZATIONS,REMOTE_STATION,COLLECTION_POINT,FREQUENCY,LANGUAGE,STATION_NAME,TRAN_NO,POWER,GET_TYPE,ABNORMAL_TYPE,ABNORMAL_DATE,ABNORMAL_TIME,TYPE,REMARK,PLAY_TIME,COUNT_MINUES
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and oracle -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="dataId">
    <![CDATA[
        INSERT INTO ZRST_REP_ABNORMAL_TAB (
        	DATA_ID ,
        	REPORT_ID ,
        	SEND_COUNTY ,
        	SEND_CITY ,
        	BROADCASTING_ORGANIZATIONS ,
        	REMOTE_STATION ,
        	COLLECTION_POINT ,
        	FREQUENCY ,
        	LANGUAGE ,
        	STATION_NAME ,
        	TRAN_NO ,
        	POWER ,
        	GET_TYPE ,
        	ABNORMAL_TYPE ,
        	ABNORMAL_DATE ,
        	ABNORMAL_TIME ,
        	TYPE ,
        	REMARK ,
        	PLAY_TIME ,
        	COUNT_MINUES 
        ) VALUES (
        	#{dataId} ,
        	#{reportId} ,
        	#{sendCounty} ,
        	#{sendCity} ,
        	#{broadcastingOrganizations} ,
        	#{remoteStation} ,
        	#{collectionPoint} ,
        	#{frequency} ,
        	#{language} ,
        	#{stationName} ,
        	#{tranNo} ,
        	#{power} ,
        	#{getType} ,
        	#{abnormalType} ,
        	#{abnormalDate} ,
        	#{abnormalTime} ,
        	#{type} ,
        	#{remark} ,
        	#{playTime} ,
        	#{countMinues} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update" >
    <![CDATA[
        UPDATE ZRST_REP_ABNORMAL_TAB SET
	        REPORT_ID = #{reportId} ,
	        SEND_COUNTY = #{sendCounty} ,
	        SEND_CITY = #{sendCity} ,
	        BROADCASTING_ORGANIZATIONS = #{broadcastingOrganizations} ,
	        REMOTE_STATION = #{remoteStation} ,
	        COLLECTION_POINT = #{collectionPoint} ,
	        FREQUENCY = #{frequency} ,
	        LANGUAGE = #{language} ,
	        STATION_NAME = #{stationName} ,
	        TRAN_NO = #{tranNo} ,
	        POWER = #{power} ,
	        GET_TYPE = #{getType} ,
	        ABNORMAL_TYPE = #{abnormalType} ,
	        ABNORMAL_DATE = #{abnormalDate} ,
	        ABNORMAL_TIME = #{abnormalTime} ,
	        TYPE = #{type} ,
	        REMARK = #{remark} ,
	        PLAY_TIME = #{playTime} ,
	        COUNT_MINUES = #{countMinues} 
        WHERE 
	        DATA_ID = #{dataId} 
    ]]>
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM ZRST_REP_ABNORMAL_TAB WHERE
        DATA_ID = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="ZrstRepAbnormalTab">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM ZRST_REP_ABNORMAL_TAB
	        WHERE 
		        DATA_ID = #{id} 
	    ]]>
	</select>
	
	<sql id="findPage_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(dataId)">
				AND DATA_ID = #{dataId}
			</if>
	       <if test="@Ognl@isNotEmpty(reportId)">
				AND REPORT_ID = #{reportId}
			</if>
	       <if test="@Ognl@isNotEmpty(sendCounty)">
				AND SEND_COUNTY = #{sendCounty}
			</if>
	       <if test="@Ognl@isNotEmpty(sendCity)">
				AND SEND_CITY = #{sendCity}
			</if>
	       <if test="@Ognl@isNotEmpty(broadcastingOrganizations)">
				AND BROADCASTING_ORGANIZATIONS = #{broadcastingOrganizations}
			</if>
	       <if test="@Ognl@isNotEmpty(remoteStation)">
				AND REMOTE_STATION = #{remoteStation}
			</if>
	       <if test="@Ognl@isNotEmpty(collectionPoint)">
				AND COLLECTION_POINT = #{collectionPoint}
			</if>
	       <if test="@Ognl@isNotEmpty(frequency)">
				AND FREQUENCY = #{frequency}
			</if>
	       <if test="@Ognl@isNotEmpty(language)">
				AND LANGUAGE = #{language}
			</if>
	       <if test="@Ognl@isNotEmpty(stationName)">
				AND STATION_NAME = #{stationName}
			</if>
	       <if test="@Ognl@isNotEmpty(tranNo)">
				AND TRAN_NO = #{tranNo}
			</if>
	       <if test="@Ognl@isNotEmpty(power)">
				AND POWER = #{power}
			</if>
	       <if test="@Ognl@isNotEmpty(getType)">
				AND GET_TYPE = #{getType}
			</if>
	       <if test="@Ognl@isNotEmpty(abnormalType)">
				AND ABNORMAL_TYPE = #{abnormalType}
			</if>
	       <if test="@Ognl@isNotEmpty(abnormalDate)">
				AND ABNORMAL_DATE = #{abnormalDate}
			</if>
	       <if test="@Ognl@isNotEmpty(abnormalTime)">
				AND ABNORMAL_TIME = #{abnormalTime}
			</if>
	       <if test="@Ognl@isNotEmpty(type)">
				AND TYPE = #{type}
			</if>
	       <if test="@Ognl@isNotEmpty(remark)">
				AND REMARK = #{remark}
			</if>
	       <if test="@Ognl@isNotEmpty(playTime)">
				AND PLAY_TIME = #{playTime}
			</if>
	       <if test="@Ognl@isNotEmpty(countMinues)">
				AND COUNT_MINUES = #{countMinues}
			</if>
		</where>
	</sql>
		
    <select id="findPage_count" resultType="long">
        SELECT count(*) FROM ZRST_REP_ABNORMAL_TAB
		<include refid="findPage_where"/>
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="ZrstRepAbnormalTab">
    	SELECT <include refid="columns" />
	    FROM ZRST_REP_ABNORMAL_TAB
		<include refid="findPage_where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
</mapper>

