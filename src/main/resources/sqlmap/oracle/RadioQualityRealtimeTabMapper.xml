<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="com.hw.mapper.RadioQualityRealtimeTabMapper">

	<resultMap id="RadioQualityRealtimeTab" type="com.hw.domain.po.RadioQualityRealtimeTab">
        <result property="realtimeId" column="REALTIME_ID"/>
        <result property="equCode" column="EQU_CODE"/>
        <result property="frequency" column="FREQUENCY"/>
        <result property="checkDatetime" column="CHECK_DATETIME"/>
        <result property="value1" column="VALUE1"/>
        <result property="value2" column="VALUE2"/>
        <result property="typeId" column="TYPE_ID"/>
        <result property="headId" column="HEAD_ID"/>
        <result property="band" column="BAND"/>
        <result property="description" column="DESCRIPTION"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="columns">
	    <![CDATA[
		REALTIME_ID,EQU_CODE,FREQUENCY,CHECK_DATETIME,VALUE1,VALUE2,TYPE_ID,HEAD_ID,BAND,DESCRIPTION
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and oracle -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="realtimeId">
    <![CDATA[
        INSERT INTO RADIO_QUALITY_REALTIME_TAB (
        	REALTIME_ID ,
        	EQU_CODE ,
        	FREQUENCY ,
        	CHECK_DATETIME ,
        	VALUE1 ,
        	VALUE2 ,
        	TYPE_ID ,
        	HEAD_ID ,
        	BAND ,
        	DESCRIPTION 
        ) VALUES (
        	#{realtimeId} ,
        	#{equCode} ,
        	#{frequency} ,
        	#{checkDatetime} ,
        	#{value1} ,
        	#{value2} ,
        	#{typeId} ,
        	#{headId} ,
        	#{band} ,
        	#{description} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="update" >
    <![CDATA[
        UPDATE RADIO_QUALITY_REALTIME_TAB SET
	        EQU_CODE = #{equCode} ,
	        FREQUENCY = #{frequency} ,
	        CHECK_DATETIME = #{checkDatetime} ,
	        VALUE1 = #{value1} ,
	        VALUE2 = #{value2} ,
	        TYPE_ID = #{typeId} ,
	        HEAD_ID = #{headId} ,
	        BAND = #{band} ,
	        DESCRIPTION = #{description} 
        WHERE 
	        REALTIME_ID = #{realtimeId} 
    ]]>
	</update>

    <delete id="delete">
    <![CDATA[
        DELETE FROM RADIO_QUALITY_REALTIME_TAB WHERE
        REALTIME_ID = #{id} 
    ]]>
    </delete>
    
    <select id="getById" resultMap="RadioQualityRealtimeTab">
		SELECT <include refid="columns" />
	    <![CDATA[
		    FROM RADIO_QUALITY_REALTIME_TAB 
	        WHERE 
		        REALTIME_ID = #{id} 
	    ]]>
	</select>
	
	<sql id="findPage_where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(realtimeId)">
				AND REALTIME_ID = #{realtimeId}
			</if>
	       <if test="@Ognl@isNotEmpty(equCode)">
				AND EQU_CODE = #{equCode}
			</if>
	       <if test="@Ognl@isNotEmpty(frequency)">
				AND FREQUENCY = #{frequency}
			</if>
	       <if test="@Ognl@isNotEmpty(checkDatetimeBegin)">
				AND CHECK_DATETIME >= #{checkDatetimeBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(checkDatetimeEnd)">
				AND CHECK_DATETIME &lt;= #{checkDatetimeEnd}
		   </if>
	       <if test="@Ognl@isNotEmpty(value1)">
				AND VALUE1 = #{value1}
			</if>
	       <if test="@Ognl@isNotEmpty(value2)">
				AND VALUE2 = #{value2}
			</if>
	       <if test="@Ognl@isNotEmpty(typeId)">
				AND TYPE_ID = #{typeId}
			</if>
	       <if test="@Ognl@isNotEmpty(headId)">
				AND HEAD_ID = #{headId}
			</if>
	       <if test="@Ognl@isNotEmpty(band)">
				AND BAND = #{band}
			</if>
	       <if test="@Ognl@isNotEmpty(description)">
				AND DESCRIPTION = #{description}
			</if>
		</where>
	</sql>
		
    <select id="findPage_count" resultType="long">
        SELECT count(*) FROM RADIO_QUALITY_REALTIME_TAB 
		<include refid="findPage_where"/>
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="findPage" resultMap="RadioQualityRealtimeTab">
    	SELECT <include refid="columns" />
	    FROM RADIO_QUALITY_REALTIME_TAB 
		<include refid="findPage_where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
</mapper>

